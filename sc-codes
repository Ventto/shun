SC2000 "See if you can use ${#variable} instead."
SC2001 "See if you can use ${variable//search/replace} instead."
SC2004 "$/${} is unnecessary on arithmetic variables."
SC2005 "Useless echo? Instead of 'echo $(cmd)', just use 'cmd'."
SC2006 "Use $(..) instead of legacy `..`."
SC2007 "Use $((..)) instead of deprecated $[..]"
SC2013 "To read lines rather than words, pipe/redirect to a 'while read' loop."
SC2015 "Note that A && B || C is not if-then-else. C may run when A is true."
SC2017 "Increase precision by replacing a/b*c with a*c/b."
SC2026 "This word is outside of quotes. Did you intend to 'nest '\"'single quotes'\"' instead'? "
SC2027 "The surrounding quotes actually unquote this. Remove or escape them."
SC2028 "echo won't expand escape sequences. Consider printf."
SC2035 "Use ./*glob* or -- *glob* so names with dashes won't become options."
SC2036 "If you wanted to assign the output of the pipeline, use a=$(b | c) ."
SC2037 "To assign the output of a command, use var=$(cmd) ."
SC2041 "This is a literal string. To run as a command, use $(..) instead of '..' . "
SC2042 "Use spaces, not commas, to separate loop elements."
SC2043 "This loop will only ever run once for a constant value. Did you perhaps mean to loop over dir/*, $var or $(cmd)?"
SC2044 "For loops over find output are fragile. Use find -exec or a while read loop."
SC2045 "Iterating over ls output is fragile. Use globs."
SC2048 "Use \"$@\" (with quotes) to prevent whitespace problems."
SC2050 "This expression is constant. Did you forget the $ on a variable?"
SC2051 "Bash doesn't support variables in brace range expansions."
SC2054 "Use spaces, not commas, to separate array elements."
SC2056 "You probably wanted && here."
SC2057 "Unknown binary operator."
SC2058 "Unknown unary operator."
SC2064 "Use single quotes, otherwise this expands now rather than when signalled."
SC2066 "Since you double quoted this, it will not word split, and the loop will only run once."
SC2069 "The order of the 2>&1 and the redirect matters. The 2>&1 has to be last."
SC2070 "-n doesn't work with unquoted arguments. Quote or use [[ ]]."
SC2079 "(( )) doesn't support decimals. Use bc or awk."
SC2079 "(( )) doesn't support decimals. Use bc or awk."
SC2080 "Numbers with leading 0 are considered octal."
SC2083 "Don't add spaces after the slash in './file'."
SC2084 "Remove '$' or use '_=$((expr))' to avoid executing output."
SC2088 "Tilde does not expand in quotes. Use $HOME."
SC2091 "Remove surrounding $() to avoid executing output."
SC2092 "Remove backticks to avoid executing output."
SC2096 "On most OS, shebangs can only specify a single parameter."
SC2098 "This expansion will not see the mentioned assignment."
SC2101 "Named class needs outer [], e.g. [[:digit:]]."
SC2102 "Ranges can only match single chars (mentioned due to duplicates)."
SC2107 "Instead of [ a && b ], use [ a ] && [ b ]."
SC2108 "In [[..]], use && instead of -a."
SC2109 "Instead of [ a || b ], use [ a ] || [ b ]."
SC2110 "In [[..]], use || instead of -o."
SC2111 "ksh does not allow 'function' keyword and '()' at the same time."
SC2112 "'function' keyword is non-standard. Delete it."
SC2113 "'function' keyword is non-standard. Use 'foo()' instead of 'function foo'."
SC2118 "Ksh does not support |&. Use 2>&1 |."
SC2121 "To assign a variable, use just 'var=value', no 'set ..'."
SC2123 "PATH is the shell search path. Use another name."
SC2140 "Word is of the form \"A\"B\"C\" (B indicated). Did you mean \"ABC\" or \"A\\\"B\\\"C\"?"
SC2147 "Literal tilde in PATH works poorly across programs."
SC2148 "Tips depend on target shell and yours is unknown. Add a shebang."
SC2155 "Declare and assign separately to avoid masking return values."
SC2156 "Injecting filenames is fragile and insecure. Use parameters."
SC2166 "Prefer [ p ] && [ q ] as [ p -a q ] is not well defined."
SC2166 "Prefer [ p ] || [ q ] as [ p -o q ] is not well defined."
SC2175 "Quote this invalid brace expansion since it should be passed literally to eval."
SC2178 "Variable was used as an array but is now assigned a string."
SC2179 "Use array+=(\"item\") to append items to an array."
SC2181 "Check exit code directly with e.g. 'if mycmd;', not indirectly with $?."
SC2187 "Ash scripts will be checked as Dash. Add '# shellcheck shell=dash' to silence."
SC2191 "The = here is literal. To assign by index, use ( [index]=value ) with no spaces. To keep as literal, quote it."
SC2192 "This array element has no value. Remove spaces after = or use \"\" for empty string."
SC2193 "The arguments to this comparison can never be equal. Make sure your syntax is correct."
SC2204 "(..) is a subshell. Did you mean [ .. ], a test expression?"
SC2205 "(..) is a subshell. Did you mean [ .. ], a test expression?"
SC2209 "Use var=$(command) to assign output (or quote to assign string)."
SC2210 "This is a file redirection. Was it supposed to be a comparison or fd operation?"
SC2212 "Use 'false' instead of empty [/[[ conditionals."
SC2220 "Invalid flags are not handled. Add a *) case."
